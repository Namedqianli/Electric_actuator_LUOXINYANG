C51 COMPILER V9.60.0.0   MAIN                                                              08/27/2021 05:19:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\nrf24l01;.\key) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

*** WARNING C500 IN LINE 1 OF main.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          #include "reg52.h"
   2          #include "stdio.h"
   3          #include "nrf24l01.h"
   4          #include "SI24R1.h"
*** WARNING C317 IN LINE 25 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'FLUSH_TX'
*** WARNING C317 IN LINE 26 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'FLUSH_RX'
*** WARNING C317 IN LINE 27 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'REUSE_TX_PL'
*** WARNING C317 IN LINE 28 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'NOP'
*** WARNING C317 IN LINE 42 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'RX_ADDR_P0'
*** WARNING C317 IN LINE 43 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'RX_ADDR_P1'
*** WARNING C317 IN LINE 44 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'RX_ADDR_P2'
*** WARNING C317 IN LINE 45 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'RX_ADDR_P3'
*** WARNING C317 IN LINE 46 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'RX_ADDR_P4'
*** WARNING C317 IN LINE 47 OF .\nrf24l01\SI24R1.h: attempt to redefine macro 'RX_ADDR_P5'
   5          #include "key.h"
   6          
   7          #define uchar unsigned char
   8          #define uint unsigned int 
   9          
  10          void uart_cfg();
  11          void send_byte(uchar by);
  12          void send_string(uchar *p);
  13          void delayms(uchar i);
  14          
  15          uchar str[] = {"aaaaaaa"};
  16          
  17          void main()
  18          {
  19   1        uart_cfg(); //²¨ÌØÂÊ4800    ,0xf9
  20   1      //  NRF24L01Int();
  21   1      //  while(NRF24L01_Check())
  22   1      //    send_string("Error\n");
  23   1      //  send_string("Successed!\n");
  24   1      //  NRFSetRXMode();
  25   1        SI24R1_Init();
  26   1        SI24R1_TX_Mode();
  27   1        while(1){
  28   2      //    if(NRFRevDate(str)) {
  29   2      //      send_string(str);
  30   2      //    }     
  31   2      //    NRFSetTxMode(str);
  32   2      //    NRFDelay(1000);
  33   2      //    if(!SI24R1_RxPacket(str)) {
  34   2      //      send_string(str);
  35   2      //    }
  36   2          SI24R1_TxPacket("a");
  37   2        }
  38   1      }
  39          
  40           void uart_cfg()
  41          {
  42   1        SCON = 0X50;//MODE 1
  43   1        TMOD&= 0X0F;//Çå³ýT1µÄ¿ØÖÆÎ»
C51 COMPILER V9.60.0.0   MAIN                                                              08/27/2021 05:19:00 PAGE 2   

  44   1        TMOD|= 0X20;//T1µÄ¹¤×÷Ä£Ê½2
  45   1        PCON|= 0X80;//±¶Æµ
  46   1      
  47   1        TH1 = 0xf3; //4800
  48   1        TL1 = TH1;
  49   1      
  50   1        ET1 = 0;//½ûÖ¹T1ÖÐ¶Ï 
  51   1        //      EA = 1; 
  52   1        TR1 = 1;      
  53   1        //      ES = 1;//Ê¹ÄÜ´®¿ÚÖÐ¶Ï ,ÎÞÂÛÊÇTI/RI³öÏÖ£¬Ö»ÒªÖÐ¶Ï´ò¿ª£¬µ¥Æ¬»ú¾Í½øÈëÖÐ¶Ïº¯Êý¡£
  54   1      }
  55          
  56           /*ÖÐ¶Ï´¦Àíº¯Êý*/
  57          // void uart_interrupt() interrupt 4{
  58          //
  59          //        if(RI==1)RI = 0;
  60          //
  61          //        if(TI==1);
  62          //               //TI = 0;
  63          //    }
  64          
  65           
  66          /*·¢ËÍÒ»¸ö ×Ö·û*/
  67          void send_byte(uchar by)
  68          {
  69   1        SBUF = by;
  70   1        while(!TI);//µ±Ð´ÏÂÕâ¾äµÄÊ±ºò£¬¾Í²»ÒªÔÚÖÐ¶Ïº¯ÊýÀïÃæÔÚÐ´TI = 0;Õâ¾äÁË£¬²»È»½øÈëÖÐ¶Ïº¯Êý½«TIÇåÁãÖ®ºó£¬³ÌÐò¾
             -Í»áÒ»Ö±¿¨ÔÚÕâÀï
  71   1        TI = 0;       //ÔÚÕâÀï½«TIÇåÁã
  72   1      }
  73          /*·¢ËÍÒ»¸ö×Ö·û´®*/
  74          void send_string(uchar *p)
  75          {
  76   1        while(*p!= '\0'){
  77   2          send_byte(*p);
  78   2          p++;
  79   2        }
  80   1      }
  81          /*¼òµ¥ÑÓÊ±*/
  82          void delayms(uchar i)
  83          {
  84   1        uint j;
  85   1        while(i--)
  86   1        {
  87   2          for(j = 0; j < 150; j++);
  88   2        }
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     96    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  11 WARNING(S),  0 ERROR(S)
